// <auto-generated />
using System;
using Aula03.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aula03.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230411012419_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("AtendimentoProdutos", b =>
                {
                    b.Property<int>("AtendimentoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AtendimentoID", "ProdutoID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("AtendimentoProdutos", (string)null);
                });

            modelBuilder.Entity("Aula03.Models.Atendimento", b =>
                {
                    b.Property<int?>("AtendimentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GarcomID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("InitDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MesaID")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("AtendimentoID");

                    b.HasIndex("GarcomID");

                    b.HasIndex("MesaID");

                    b.ToTable("Atendimento", (string)null);
                });

            modelBuilder.Entity("Aula03.Models.Categoria", b =>
                {
                    b.Property<int?>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("Aula03.Models.Garcom", b =>
                {
                    b.Property<int?>("GarcomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("BirthDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GarcomID");

                    b.ToTable("Garcom", (string)null);
                });

            modelBuilder.Entity("Aula03.Models.Mesa", b =>
                {
                    b.Property<int?>("MesaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("HoraLiberacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("MesaID");

                    b.ToTable("Mesa", (string)null);
                });

            modelBuilder.Entity("Aula03.Models.Produto", b =>
                {
                    b.Property<int?>("ProdutoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("REAL");

                    b.HasKey("ProdutoID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("AtendimentoProdutos", b =>
                {
                    b.HasOne("Aula03.Models.Atendimento", null)
                        .WithMany()
                        .HasForeignKey("AtendimentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aula03.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aula03.Models.Atendimento", b =>
                {
                    b.HasOne("Aula03.Models.Garcom", "Garcom")
                        .WithMany()
                        .HasForeignKey("GarcomID");

                    b.HasOne("Aula03.Models.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garcom");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("Aula03.Models.Produto", b =>
                {
                    b.HasOne("Aula03.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
