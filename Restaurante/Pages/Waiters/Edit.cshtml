@page "{id:int}"
@model Aula03.pages.Waiters.Edit
@{
}
<div class="container mt-5">
	<div class="row">
		<div class="col-md-4 mx-auto criar">
			<h1>Editar Garçom</h1>
			<form method="post">
				<div asp-validation-summary="ModelOnly" class="text-dange"></div>
				<input type="hidden" asp-for="waiter.WaiterID" />
				<div class="form-group">
					<label asp-for="waiter.Name">Nome:</label>
					<input asp-for="waiter.Name" class="form-control" onkeyup="handleText(event)" required />
					<span asp-validation-for="waiter.Name" class="text-dange"></span>
				</div>
				<div class="form-group">
					<label asp-for="waiter.LastName">Sobrenome:</label>
					<input asp-for="waiter.LastName" class="form-control" onkeyup="handleText(event)" required />
				</div>
				<div class="form-group">
					<label asp-for="waiter.Cellphone">Telefone:</label>
					<input asp-for="waiter.Cellphone" class="form-control" onkeyup="handlePhone(event)" maxlength="15" />
				</div>
				<div class="form-group">
					<label asp-for="waiter.BirthDate">Data de Nascimento:</label>
					<input asp-for="waiter.BirthDate" type="date" class="form-control" />
				</div>
				<div class="form-group">
					<input type="submit" class="btn btn-primary" value="Salvar" />
					<a asp-page="/Waiters/Index" class="btn btn-secondary">Cancelar</a>
				</div>
			</form>
		</div>
	</div>
</div>

<script>

	const lettersOnly = (value) => {
		const regex = /^[a-zA-ZÀ-ú\s'-]*$/;
		return regex.test(value) && !/\d/.test(value);
	}

	const handleText = (event) => {
		let input = event.target;
		let value = input.value;
		if (!lettersOnly(value)) {
			input.value = value.slice(0, -1);
		}
	};

	const handlePhone = (event) => {
		let input = event.target
		input.value = phoneMask(input.value)
	}

	const phoneMask = (value) => {
		if (!value) return ""
		value = value.replace(/\D/g, '')
		value = value.replace(/(\d{2})(\d)/, "($1) $2")
		value = value.replace(/(\d)(\d{4})$/, "$1-$2")
		return value
	}

</script>
